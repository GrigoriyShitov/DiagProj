/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../rrc-25.331-i00.asn1"
 * 	`asn1c -fcompound-names -pdu=all`
 */

#ifndef	_DL_DPCH_InfoCommon_r12_H_
#define	_DL_DPCH_InfoCommon_r12_H_


#include <asn_application.h>

/* Including external dependencies */
#include "MAC-d-HFN-initial-value.h"
#include <NULL.h>
#include "TimingMaintainedSynchInd.h"
#include <constr_SEQUENCE.h>
#include <constr_CHOICE.h>
#include "PowerOffsetPilot-pdpdch.h"
#include "SF512-AndPilot-r12.h"
#include "PositionFixedOrFlexible.h"
#include <BOOLEAN.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum DL_DPCH_InfoCommon_r12__cfnHandling_PR {
	DL_DPCH_InfoCommon_r12__cfnHandling_PR_NOTHING,	/* No components present */
	DL_DPCH_InfoCommon_r12__cfnHandling_PR_maintain,
	DL_DPCH_InfoCommon_r12__cfnHandling_PR_initialise
} DL_DPCH_InfoCommon_r12__cfnHandling_PR;
typedef enum DL_DPCH_InfoCommon_r12__modeSpecificInfo_PR {
	DL_DPCH_InfoCommon_r12__modeSpecificInfo_PR_NOTHING,	/* No components present */
	DL_DPCH_InfoCommon_r12__modeSpecificInfo_PR_fdd,
	DL_DPCH_InfoCommon_r12__modeSpecificInfo_PR_tdd
} DL_DPCH_InfoCommon_r12__modeSpecificInfo_PR;

/* Forward declarations */
struct DL_DPCH_PowerControlInfo;
struct Dl_rate_matching_restriction;

/* DL-DPCH-InfoCommon-r12 */
typedef struct DL_DPCH_InfoCommon_r12 {
	struct DL_DPCH_InfoCommon_r12__cfnHandling {
		DL_DPCH_InfoCommon_r12__cfnHandling_PR present;
		union DL_DPCH_InfoCommon_r12__cfnHandling_u {
			struct DL_DPCH_InfoCommon_r12__cfnHandling__maintain {
				TimingMaintainedSynchInd_t	*timingmaintainedsynchind	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} maintain;
			NULL_t	 initialise;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} cfnHandling;
	struct DL_DPCH_InfoCommon_r12__modeSpecificInfo {
		DL_DPCH_InfoCommon_r12__modeSpecificInfo_PR present;
		union DL_DPCH_InfoCommon_r12__modeSpecificInfo_u {
			struct DL_DPCH_InfoCommon_r12__modeSpecificInfo__fdd {
				struct DL_DPCH_PowerControlInfo	*dl_DPCH_PowerControlInfo	/* OPTIONAL */;
				PowerOffsetPilot_pdpdch_t	 powerOffsetPilot_pdpdch;
				struct Dl_rate_matching_restriction	*dl_rate_matching_restriction	/* OPTIONAL */;
				SF512_AndPilot_r12_t	 spreadingFactorAndPilot;
				PositionFixedOrFlexible_t	 positionFixedOrFlexible;
				BOOLEAN_t	 tfci_Existence;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fdd;
			struct DL_DPCH_InfoCommon_r12__modeSpecificInfo__tdd {
				struct DL_DPCH_PowerControlInfo	*dl_DPCH_PowerControlInfo	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} tdd;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} modeSpecificInfo;
	MAC_d_HFN_initial_value_t	*mac_d_HFN_initial_value	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} DL_DPCH_InfoCommon_r12_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_DL_DPCH_InfoCommon_r12;
extern asn_SEQUENCE_specifics_t asn_SPC_DL_DPCH_InfoCommon_r12_specs_1;
extern asn_TYPE_member_t asn_MBR_DL_DPCH_InfoCommon_r12_1[3];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "DL-DPCH-PowerControlInfo.h"
#include "Dl-rate-matching-restriction.h"

#endif	/* _DL_DPCH_InfoCommon_r12_H_ */
#include <asn_internal.h>
