/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../rrc-25.331-i00.asn1"
 * 	`asn1c -fcompound-names -pdu=all`
 */

#ifndef	_DL_PhysChCapabilityFDD_vc50ext_H_
#define	_DL_PhysChCapabilityFDD_vc50ext_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum DL_PhysChCapabilityFDD_vc50ext__supportforDCHEnhancements {
	DL_PhysChCapabilityFDD_vc50ext__supportforDCHEnhancements_basic	= 0,
	DL_PhysChCapabilityFDD_vc50ext__supportforDCHEnhancements_full	= 1
} e_DL_PhysChCapabilityFDD_vc50ext__supportforDCHEnhancements;
typedef enum DL_PhysChCapabilityFDD_vc50ext__simultaneousSupportforDCHEnhancementsAndCM {
	DL_PhysChCapabilityFDD_vc50ext__simultaneousSupportforDCHEnhancementsAndCM_true	= 0
} e_DL_PhysChCapabilityFDD_vc50ext__simultaneousSupportforDCHEnhancementsAndCM;
typedef enum DL_PhysChCapabilityFDD_vc50ext__simultaneousSupportforDCHEnhancementsAndDPCCHDiscntTx {
	DL_PhysChCapabilityFDD_vc50ext__simultaneousSupportforDCHEnhancementsAndDPCCHDiscntTx_true	= 0
} e_DL_PhysChCapabilityFDD_vc50ext__simultaneousSupportforDCHEnhancementsAndDPCCHDiscntTx;
typedef enum DL_PhysChCapabilityFDD_vc50ext__drx_enhancements {
	DL_PhysChCapabilityFDD_vc50ext__drx_enhancements_true	= 0
} e_DL_PhysChCapabilityFDD_vc50ext__drx_enhancements;
typedef enum DL_PhysChCapabilityFDD_vc50ext__hs_dpcchOverheadReduction {
	DL_PhysChCapabilityFDD_vc50ext__hs_dpcchOverheadReduction_true	= 0
} e_DL_PhysChCapabilityFDD_vc50ext__hs_dpcchOverheadReduction;
typedef enum DL_PhysChCapabilityFDD_vc50ext__supportofEnhancedServingCellChangeForEvent1C {
	DL_PhysChCapabilityFDD_vc50ext__supportofEnhancedServingCellChangeForEvent1C_true	= 0
} e_DL_PhysChCapabilityFDD_vc50ext__supportofEnhancedServingCellChangeForEvent1C;
typedef enum DL_PhysChCapabilityFDD_vc50ext__supportofDPCCH2 {
	DL_PhysChCapabilityFDD_vc50ext__supportofDPCCH2_true	= 0
} e_DL_PhysChCapabilityFDD_vc50ext__supportofDPCCH2;

/* DL-PhysChCapabilityFDD-vc50ext */
typedef struct DL_PhysChCapabilityFDD_vc50ext {
	long	*supportforDCHEnhancements	/* OPTIONAL */;
	long	*simultaneousSupportforDCHEnhancementsAndCM	/* OPTIONAL */;
	long	*simultaneousSupportforDCHEnhancementsAndDPCCHDiscntTx	/* OPTIONAL */;
	long	*drx_enhancements	/* OPTIONAL */;
	long	*hs_dpcchOverheadReduction	/* OPTIONAL */;
	long	*supportofEnhancedServingCellChangeForEvent1C	/* OPTIONAL */;
	long	*supportofDPCCH2	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} DL_PhysChCapabilityFDD_vc50ext_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_supportforDCHEnhancements_2;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_simultaneousSupportforDCHEnhancementsAndCM_5;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_simultaneousSupportforDCHEnhancementsAndDPCCHDiscntTx_7;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_drx_enhancements_9;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_hs_dpcchOverheadReduction_11;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportofEnhancedServingCellChangeForEvent1C_13;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportofDPCCH2_15;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_DL_PhysChCapabilityFDD_vc50ext;
extern asn_SEQUENCE_specifics_t asn_SPC_DL_PhysChCapabilityFDD_vc50ext_specs_1;
extern asn_TYPE_member_t asn_MBR_DL_PhysChCapabilityFDD_vc50ext_1[7];

#ifdef __cplusplus
}
#endif

#endif	/* _DL_PhysChCapabilityFDD_vc50ext_H_ */
#include <asn_internal.h>
