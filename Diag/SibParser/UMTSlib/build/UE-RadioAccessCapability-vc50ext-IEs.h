/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../rrc-25.331-i00.asn1"
 * 	`asn1c -fcompound-names -pdu=all`
 */

#ifndef	_UE_RadioAccessCapability_vc50ext_IEs_H_
#define	_UE_RadioAccessCapability_vc50ext_IEs_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum UE_RadioAccessCapability_vc50ext_IEs__supportofDsacAndPpacInCellDch {
	UE_RadioAccessCapability_vc50ext_IEs__supportofDsacAndPpacInCellDch_true	= 0
} e_UE_RadioAccessCapability_vc50ext_IEs__supportofDsacAndPpacInCellDch;
typedef enum UE_RadioAccessCapability_vc50ext_IEs__supportOfMultiflowWithFTPICHFromAssisting {
	UE_RadioAccessCapability_vc50ext_IEs__supportOfMultiflowWithFTPICHFromAssisting_true	= 0
} e_UE_RadioAccessCapability_vc50ext_IEs__supportOfMultiflowWithFTPICHFromAssisting;

/* Forward declarations */
struct MeasurementCapability_vc50ext;
struct MultiModeRAT_Capability_vc50ext;
struct PhysicalChannelCapability_vc50ext;

/* UE-RadioAccessCapability-vc50ext-IEs */
typedef struct UE_RadioAccessCapability_vc50ext_IEs {
	struct MeasurementCapability_vc50ext	*measurementCapability	/* OPTIONAL */;
	long	*supportofDsacAndPpacInCellDch	/* OPTIONAL */;
	long	*supportOfMultiflowWithFTPICHFromAssisting	/* OPTIONAL */;
	struct MultiModeRAT_Capability_vc50ext	*multiModeRAT_Capability	/* OPTIONAL */;
	struct PhysicalChannelCapability_vc50ext	*physicalChannelCapability	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} UE_RadioAccessCapability_vc50ext_IEs_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_supportofDsacAndPpacInCellDch_3;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportOfMultiflowWithFTPICHFromAssisting_5;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_UE_RadioAccessCapability_vc50ext_IEs;
extern asn_SEQUENCE_specifics_t asn_SPC_UE_RadioAccessCapability_vc50ext_IEs_specs_1;
extern asn_TYPE_member_t asn_MBR_UE_RadioAccessCapability_vc50ext_IEs_1[5];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "MeasurementCapability-vc50ext.h"
#include "MultiModeRAT-Capability-vc50ext.h"
#include "PhysicalChannelCapability-vc50ext.h"

#endif	/* _UE_RadioAccessCapability_vc50ext_IEs_H_ */
#include <asn_internal.h>
