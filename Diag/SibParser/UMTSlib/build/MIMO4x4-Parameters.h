/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../rrc-25.331-i00.asn1"
 * 	`asn1c -fcompound-names -pdu=all`
 */

#ifndef	_MIMO4x4_Parameters_H_
#define	_MIMO4x4_Parameters_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NULL.h>
#include "MIMO-N-M-Ratio.h"
#include <BIT_STRING.h>
#include <constr_SEQUENCE.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MIMO4x4_Parameters__configurationInfo_PR {
	MIMO4x4_Parameters__configurationInfo_PR_NOTHING,	/* No components present */
	MIMO4x4_Parameters__configurationInfo_PR_continue,
	MIMO4x4_Parameters__configurationInfo_PR_newConfiguration
} MIMO4x4_Parameters__configurationInfo_PR;

/* Forward declarations */
struct MIMO4x4_PilotConfiguration;

/* MIMO4x4-Parameters */
typedef struct MIMO4x4_Parameters {
	struct MIMO4x4_Parameters__configurationInfo {
		MIMO4x4_Parameters__configurationInfo_PR present;
		union MIMO4x4_Parameters__configurationInfo_u {
			NULL_t	 Continue;
			struct MIMO4x4_Parameters__configurationInfo__newConfiguration {
				MIMO_N_M_Ratio_t	*mimo4x4N_M_Ratio	/* OPTIONAL */;
				struct MIMO4x4_PilotConfiguration	*mimo4x4PilotConfiguration	/* OPTIONAL */;
				BIT_STRING_t	*precodingWeightSetRestriction	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} newConfiguration;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} configurationInfo;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MIMO4x4_Parameters_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_MIMO4x4_Parameters;
extern asn_SEQUENCE_specifics_t asn_SPC_MIMO4x4_Parameters_specs_1;
extern asn_TYPE_member_t asn_MBR_MIMO4x4_Parameters_1[1];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "MIMO4x4-PilotConfiguration.h"

#endif	/* _MIMO4x4_Parameters_H_ */
#include <asn_internal.h>
