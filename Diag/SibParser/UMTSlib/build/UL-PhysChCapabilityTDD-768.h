/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../rrc-25.331-i00.asn1"
 * 	`asn1c -fcompound-names -pdu=all`
 */

#ifndef	_UL_PhysChCapabilityTDD_768_H_
#define	_UL_PhysChCapabilityTDD_768_H_


#include <asn_application.h>

/* Including external dependencies */
#include "MaxTS-PerFrame.h"
#include "MaxPhysChPerTimeslot.h"
#include "MinimumSF-UL.h"
#include <BOOLEAN.h>
#include <NULL.h>
#include <NativeInteger.h>
#include <constr_SEQUENCE.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum UL_PhysChCapabilityTDD_768__tdd384_edch_PR {
	UL_PhysChCapabilityTDD_768__tdd384_edch_PR_NOTHING,	/* No components present */
	UL_PhysChCapabilityTDD_768__tdd384_edch_PR_supported,
	UL_PhysChCapabilityTDD_768__tdd384_edch_PR_unsupported
} UL_PhysChCapabilityTDD_768__tdd384_edch_PR;

/* UL-PhysChCapabilityTDD-768 */
typedef struct UL_PhysChCapabilityTDD_768 {
	MaxTS_PerFrame_t	 maxTS_PerFrame;
	MaxPhysChPerTimeslot_t	 maxPhysChPerTimeslot;
	MinimumSF_UL_t	 minimumSF;
	BOOLEAN_t	 supportOfPUSCH;
	struct UL_PhysChCapabilityTDD_768__tdd384_edch {
		UL_PhysChCapabilityTDD_768__tdd384_edch_PR present;
		union UL_PhysChCapabilityTDD_768__tdd384_edch_u {
			struct UL_PhysChCapabilityTDD_768__tdd384_edch__supported {
				long	 tdd_edch_PhysicalLayerCategory;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} supported;
			NULL_t	 unsupported;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} tdd384_edch;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} UL_PhysChCapabilityTDD_768_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_UL_PhysChCapabilityTDD_768;
extern asn_SEQUENCE_specifics_t asn_SPC_UL_PhysChCapabilityTDD_768_specs_1;
extern asn_TYPE_member_t asn_MBR_UL_PhysChCapabilityTDD_768_1[5];

#ifdef __cplusplus
}
#endif

#endif	/* _UL_PhysChCapabilityTDD_768_H_ */
#include <asn_internal.h>
